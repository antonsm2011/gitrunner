#Использовать json

ПутьКСтат = "coverage/stat.json";
КомандаЗапуска = СтрШаблон("oscript -codestat=%1 tasks/test.os", ПутьКСтат);
ЗапуститьПриложение(КомандаЗапуска, ТекущийКаталог(), Истина);

ЧтениеТекста = Новый ЧтениеТекста(ПутьКСтат, КодировкаТекста.UTF8);

СтрокаJSON = ЧтениеТекста.Прочитать();
ЧтениеТекста.Закрыть();

Парсер = Новый ПарсерJSON();
ДанныеПокрытия = Парсер.ПрочитатьJSON(СтрокаJSON);

ЗаписьXML = Новый ЗаписьXML;
ЗаписьXML.ОткрытьФайл("coverage/stat.xml");
ЗаписьXML.ЗаписатьОбъявлениеXML();
ЗаписьXML.ЗаписатьНачалоЭлемента("coverage");
ЗаписьXML.ЗаписатьАтрибут("version", "1");

Для Каждого Файл Из ДанныеПокрытия Цикл
	
	ДанныеФайла = Файл.Значение;
	
	ЗаписьXML.ЗаписатьНачалоЭлемента("file");
	ЗаписьXML.ЗаписатьАтрибут("path", ДанныеФайла.Получить("#path"));
	
	Для Каждого КлючИЗначение Из ДанныеФайла Цикл
		
		Если КлючИЗначение.Ключ = "#path" Тогда
			Продолжить;
		КонецЕсли;
		
		ДанныеПроцедуры = КлючИЗначение.Значение;
		Для Каждого ДанныеСтроки Из ДанныеПроцедуры Цикл
			
			ЗаписьXML.ЗаписатьНачалоЭлемента("lineToCover");
			
			ЗаписьXML.ЗаписатьАтрибут("lineNumber", ДанныеСтроки.Ключ);
			Покрыто = Число(ДанныеСтроки.Значение.Получить("count")) > 0;
			// TODO: поменять местами, когда будет исправлен баг в движке
			ЗаписьXML.ЗаписатьАтрибут("covered", Формат(Покрыто, "BF=true; BT=false"));
			
			ЗаписьXML.ЗаписатьКонецЭлемента(); // lineToCover
		КонецЦикла
	КонецЦикла;
	
	ЗаписьXML.ЗаписатьКонецЭлемента(); // file
	
КонецЦикла;

ЗаписьXML.ЗаписатьКонецЭлемента(); // coverage
ЗаписьXML.Закрыть();
